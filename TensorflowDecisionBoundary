{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting watermark\n",
      "  Downloading watermark-1.3.4.tar.gz\n",
      "Requirement already satisfied: ipython in /usr/local/lib/python2.7/dist-packages (from watermark)\n",
      "Requirement already satisfied: pickleshare in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: backports.shutil-get-terminal-size; python_version == \"2.7\" in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: decorator in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: pygments in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: pathlib2; python_version == \"2.7\" or python_version == \"3.3\" in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python2.7/dist-packages (from ipython->watermark)\n",
      "Requirement already satisfied: enum34; python_version == \"2.7\" in /usr/local/lib/python2.7/dist-packages (from traitlets>=4.2->ipython->watermark)\n",
      "Requirement already satisfied: six in /usr/local/lib/python2.7/dist-packages (from traitlets>=4.2->ipython->watermark)\n",
      "Requirement already satisfied: ipython-genutils in /usr/local/lib/python2.7/dist-packages (from traitlets>=4.2->ipython->watermark)\n",
      "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python2.7/dist-packages (from pexpect; sys_platform != \"win32\"->ipython->watermark)\n",
      "Requirement already satisfied: scandir; python_version < \"3.5\" in /usr/local/lib/python2.7/dist-packages (from pathlib2; python_version == \"2.7\" or python_version == \"3.3\"->ipython->watermark)\n",
      "Requirement already satisfied: appdirs>=1.4.0 in /usr/local/lib/python2.7/dist-packages (from setuptools>=18.5->ipython->watermark)\n",
      "Requirement already satisfied: packaging>=16.8 in /usr/local/lib/python2.7/dist-packages (from setuptools>=18.5->ipython->watermark)\n",
      "Requirement already satisfied: wcwidth in /usr/local/lib/python2.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython->watermark)\n",
      "Requirement already satisfied: pyparsing in /usr/local/lib/python2.7/dist-packages (from packaging>=16.8->setuptools>=18.5->ipython->watermark)\n",
      "Building wheels for collected packages: watermark\n",
      "  Running setup.py bdist_wheel for watermark ... \u001b[?25l-\b \bdone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/a0/78/db/bcea4e5e6b49962fdcfc07bcd8fcf27aef7a1385b8db623109\n",
      "Successfully built watermark\n",
      "Installing collected packages: watermark\n",
      "Successfully installed watermark-1.3.4\n",
      "CPython 2.7.12\n",
      "IPython 5.3.0\n",
      "\n",
      "numpy 1.12.1\n",
      "tensorflow 1.1.0-rc0\n",
      "matplotlib 2.0.0\n",
      "pandas 0.19.2\n",
      "\n",
      "compiler   : GCC 5.4.0 20160609\n",
      "system     : Linux\n",
      "release    : 4.9.13-moby\n",
      "machine    : x86_64\n",
      "processor  : x86_64\n",
      "CPU cores  : 2\n",
      "interpreter: 64bit\n"
     ]
    }
   ],
   "source": [
    "!pip install watermark\n",
    "%load_ext watermark\n",
    "%watermark -m -v -p numpy,tensorflow,matplotlib,pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import tensorflow as tf \n",
    "%matplotlib inline\n",
    "from matplotlib import pyplot as plt\n",
    "import pandas as pd\n",
    "from scipy.special import expit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 199  200 8203 /tensorflow/data.csv\r\n"
     ]
    }
   ],
   "source": [
    "!wc  '/tensorflow/data.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/tensorflow/data.csv',names='x1 x2 y'.split(' '))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x1</th>\n",
       "      <th>x2</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.344499</td>\n",
       "      <td>1.935181</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.192481</td>\n",
       "      <td>0.942664</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.582722</td>\n",
       "      <td>-0.880124</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.151550</td>\n",
       "      <td>-1.011649</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.545083</td>\n",
       "      <td>-1.713502</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         x1        x2  y\n",
       "0  0.344499  1.935181  0\n",
       "1 -0.192481  0.942664  1\n",
       "2  0.582722 -0.880124  1\n",
       "3  0.151550 -1.011649  1\n",
       "4  0.545083 -1.713502  0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "X = df[['x1','x2']].values\n",
    "Y = df[['y']].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fcbbab86a90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## 图像观察\n",
    "X1 = df[df.y == 1]\n",
    "X0 = df[df.y == 0]\n",
    "#知道index的情况下用ix取colomn\n",
    "plt.scatter(X0.ix[:,0].values,X0.ix[:,1].values,label=0,color='red')\n",
    "plt.scatter(X1.ix[:,0].values,X1.ix[:,1].values,label=1,color='blue')\n",
    "plt.legend(loc='best'); #右上角标注"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "tf.reset_default_graph()\n",
    "x_placeholder = tf.placeholder(tf.float32, [None, X.shape[1]]) \n",
    "y_placeholder = tf.placeholder(tf.float32, [None, Y.shape[1]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#有多少变量（x1,x2），就生成几个权重\n",
    "def generate_weight_and_bias(input_dim):\n",
    "    w = tf.Variable(tf.random_uniform([input_dim,1 ], -1, 1))\n",
    "    bias = tf.Variable(tf.zeros([1, 1]))\n",
    "    return (w, bias)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "def accuracy(preds, labels):\n",
    "    return ((preds > 0.5) == labels).sum() / float(len(labels))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[tf.nn.sigmoid_cross_entropy_with_logits参见](https://www.tensorflow.org/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits)\n",
    "\n",
    "logits就是sigmoid的反函数，根据给入的logits算出sigmoid。logits在这里装入模型算出来的y_bar，labels装入测试数据"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "W,b = generate_weight_and_bias(X.shape[1])\n",
    "nn_raw_output = tf.add(tf.matmul(x_placeholder, W), b)\n",
    "final_output = tf.sigmoid(nn_raw_output)\n",
    "## 交叉熵-损失函数\n",
    "cost = tf.reduce_mean(\n",
    "     tf.nn.sigmoid_cross_entropy_with_logits(logits=nn_raw_output, labels=y_placeholder)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "from matplotlib.colors import ListedColormap\n",
    "\n",
    "\n",
    "def plot_decision_regions(X, y, y_,resolution=0.1):\n",
    "\n",
    "    # setup marker generator and color map\n",
    "    markers = ('s', 'x')\n",
    "\n",
    "    # plot the decision surface\n",
    "    x1_min, x1_max = X[:, 0].min() - 1, X[:, 0].max() + 1\n",
    "    x2_min, x2_max = X[:, 1].min() - 1, X[:, 1].max() + 1\n",
    "    xx1, xx2 = np.meshgrid(np.arange(x1_min, x1_max, resolution),\n",
    "                           np.arange(x2_min, x2_max, resolution))\n",
    "    \n",
    "    grid = np.c_[xx1.ravel(), xx2.ravel()]\n",
    "    Z = sess.run(y_, feed_dict={x_placeholder:grid})\n",
    "    Z = Z.reshape(xx1.shape)\n",
    "    plt.contourf(xx1, xx2, Z, alpha=0.4)\n",
    "    plt.xlim(xx1.min(), xx1.max())\n",
    "    plt.ylim(xx2.min(), xx2.max())\n",
    "\n",
    "    # plot class samples\n",
    "    G = [X0,X1]\n",
    "    #np.unique() return the sorted unique elements of an array\n",
    "    for idx, X in enumerate(np.unique(y)):\n",
    "        plt.scatter(x=G[idx].iloc[:,0], y=G[idx].iloc[:,1],alpha=0.8,marker=markers[idx], label=idx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "无隐层准确率：0.545000\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fcbabf9af50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cost)\n",
    "\n",
    "with tf.Session() as sess:\n",
    "    sess.run(tf.global_variables_initializer())\n",
    "    for i in range(3000):\n",
    "        feed_dict = {x_placeholder:X, y_placeholder:Y}\n",
    "        sess.run(train_step,feed_dict=feed_dict)\n",
    "        \n",
    "    preds =  sess.run(final_output,feed_dict=feed_dict)\n",
    "    print('无隐层准确率：%f' %accuracy(preds,Y))\n",
    "    plot_decision_regions(X,Y,final_output)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#重置数据\n",
    "#加了一层\n",
    "tf.reset_default_graph()\n",
    "x_placeholder = tf.placeholder(tf.float32, [None, X.shape[1]]) \n",
    "y_placeholder = tf.placeholder(tf.float32, [None, Y.shape[1]])\n",
    "#隐层节点个数\n",
    "i = 10\n",
    "#输入层到隐层\n",
    "w1 =tf.Variable(tf.random_uniform([2,i], -1, 1))\n",
    "b1= tf.Variable(tf.zeros([1, 1]))\n",
    "#隐层到输出层\n",
    "w2 = tf.Variable(tf.random_uniform([i,1], -1, 1))\n",
    "b2 = tf.Variable(tf.zeros([1, 1]))\n",
    "#中间层，tahn\n",
    "layer = tf.nn.tanh(tf.matmul(x_placeholder, w1) + b1)\n",
    "#输出层\n",
    "y = tf.sigmoid(tf.matmul(layer, w2) + b2)\n",
    "cost = tf.reduce_mean(\n",
    "    tf.nn.sigmoid_cross_entropy_with_logits(logits=y, labels=y_placeholder)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "单隐层准确率:0.975000\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fcbabfe6690>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cost)\n",
    "with tf.Session() as sess:\n",
    "    sess.run(tf.global_variables_initializer())\n",
    "    for i in range(25000):\n",
    "        feed_dict = {x_placeholder:X, y_placeholder:Y}\n",
    "        sess.run(train_step,feed_dict=feed_dict)\n",
    "\n",
    "    preds = sess.run(y,feed_dict=feed_dict)\n",
    "    print('单隐层准确率:%f'%accuracy(preds,Y))\n",
    "    plot_decision_regions(X,Y,y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Adam Algorithmus:\n",
    "an algorithm for first-order gradient-based optimization of stochastic objective functions, based on adaptive estimates of lower-order moments. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "单隐层准确率:1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXYAAAD8CAYAAABjAo9vAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJztvXtwXNd95/k5fRvdjQcJwBAEggAJPkVKpmSZICknssoS\nxdTIedjKZKdqZjbZZPOQXLXZmlRNlcez1r6dLSepmkqqkiqbiVOTTDwzm1rHkjO245gUGUtOTBGg\naVESSIEgCQIgSEIQAKLR6PfZP07f2/c2uoEGuhv9wO9ThQK6+/a95zaA7/3d7+93fkdprREEQRAa\nB1+1ByAIgiCUFxF2QRCEBkOEXRAEocEQYRcEQWgwRNgFQRAaDBF2QRCEBkOEXRAEocEQYRcEQWgw\nRNgFQRAaDH81Dtq+rUM/3L2jGocWBEGoW67fvPaB1rp7re2qIuwPd+/gj/6vr1Xj0IIgCHXLz/3K\nJ8eL2a5kK0YpFVJKvaWU+olS6l2l1P9Z6j4FQRCEjVOOiD0GnNRah5VSTcCbSqnvaq1/VIZ9C4Ig\nCOukZGHXpj1kOPOwKfMlLSMFQRCqRFmqYpRSllLqMnAf+L7W+kI59isIgiCsn7IIu9Y6pbV+EugH\nTiiljuRuo5R6SSk1pJQaWngwX47DCoIgCHkoax271noeOAe8kOe101rrY1rrY+3bO8p5WEEQBMFF\nOapiupVSHZmfm4GfAa6Wul9BEARhY5SjKqYX+AullIW5UPy11vq/lWG/giAIwgYoR1XM28DHyzAW\nQRAEoQxIrxhBEIQGQ4RdEAShwRBhFwRBaDBE2AVBEBoMEXZBEIQGQ4RdEAShwRBhFwRBaDBE2AVB\nEBoMEXZBEIQGQ4RdEAShwRBhFwRBaDBE2AVBEBoMEXZBEIQGQ4RdEAShwRBhFwRBaDBE2AVBEBoM\nEXZBEIQGQ4RdEAShwRBhFwRBaDBE2AVBEBqMkhezFoRK8uXri4RT6RXPt1k+vnBgWxVGJAi1jwi7\nUNOEU2narJU3lvnEvlTkIiI0CiLswpbmy9cXmYql0BpyJT2gYEfQqshFRBAqiXjswpYmnEqDBr8y\nj1XmCyClqzUqQSgNidiFukcsFEHwUrKwK6V2AX8J9AAaOK21/qNS9ysINndjqRXRs8YI+hcObNtU\nH14Q6oFyROxJ4N9qrS8ppbYBw0qp72ut3yvDvoUtTpvlYz6RQinv837yC/fdWIpU5met4ZVrC85+\nJHoXtgolC7vWehqYzvy8qJQaAfoAEfYtQKVtkC8c2MYr1xaKjshTgOX62X5fMdG7wtwJ2GgKV+WU\ng0p8dmJLCVBmj10ptQf4OHChnPsVapd6sUEWEtqJ3t2EkxoUZL45iVMF9IWsVcVwNRGF/J+BW2Ar\n8dnVy+9DqCxlE3alVBvwDeB3tNYP8rz+EvASQHdXT7kOKwhFoaFA5J3mS4faN7TPtURUBFaoFmUR\ndqVUE0bUv661/pt822itTwOnAQ7uOyyFZELZaLN8jmBqjeOxW6rwezZCboQ+n9AsJFJYmXp3QagV\nylEVo4CvASNa6/9Q+pCESlNtH3a9x3cLd+7zgOc9hfz4cpAboS8kU1hIvbtQe5QjYn8a+BXgilLq\ncua5/0Vr/Z0y7FuoANX2Ydd7/PVcbApdBHKragShkSlHVcybZHNOwhZjrWh6syl0EciXOK02lfjs\ncve5kNToTGLY/RlIlUxjIzNPhZJwi4PbYgmn0jVVQ14JEbUwfr5dFpm7z7WOtxmfidsmWkhmHywk\nUnm2FhoFEXahbFTb4lmNSoionTANpzZeWVMO3BfU+YR2bp8tV/8bTba+H8yswtz3uqmFi7GwcUTY\nhaJZSwQWkjp/JNggRl2t2U427guqndCF4pK6tXwxFjaOCPsWZDWByhVvt0erwRMNuiNWMKWG/jwi\nnswRmFoVyLWQCHYlEvHXJiLsW5DV/uFyywUXEin8ynjJCtYVDW7k+I3O5dG7K5578uCOKoykPNgR\nv7tHD8B8IuX8LW3l33e1EGEXhE3ALejRnc0AHN+1kysXxpzXKiXw9jXYfTEud/mnu0eP/bjQnZlQ\neUTYhbKhgHy1Fg1isa8bW7DHYmEA+vZ2M5qao2+HEfaLE3cgI/Lu7UsReLtSBzIJU4VjpbU3ZX8T\ntu02n9AsJFMr9tGWz1MT6gYRdqFstDcpScThFfTIbj/gp6+vk/e5B4CvOw7A+8zRT7Zv0mgqSsvt\nJIzeXZe4uyNjtyCvZYO8cm3B2Gw5tlqS2s93CKsjwi4UTW40mNvsql6TouUiV9B1XxqIs7u7E+1/\nj13Ano5OYBYA7Z8DZlHJA+YxcSIEiFrN64reS/Gw8/W4CafS4ovXOSLsdUalqxBWiLOrpW1b0+rR\n4FYVg3yC3to2xke2tThC3mONMdDaBcw77zuxHd56sBe30KvuA0RmAJqZujmz7uh9s7H/XtzN16D8\nDdiE9SHCXmdUuu54q4pzseRWtYzFwo53/mFrmM6OFnb1zrKno4/BrgGsxPnMll3sa3vU894b4RFO\nbL8JQKrpWQBuzV9nki76d/TQRzfcWa7wGZWG/feSL+Co5CIlwuqIsAtCkdiiHnUlPCOpKO/vMN75\nE73L7OkIcWL7PDAPiZsrxNyN/dqN8AhW4jwntgPsRSU7Sc9U6iwqgwQEtYUIe4MiE0fKR66gj6bm\n6OvrZJJ77Oo1NspTXVmrZTUxz4db4DeTrZ4TaWRE2BuUSls2+SbarEUte8Vu3OdmlypGdvshFaWv\nrxNNHNVrkqFZQV9ptWwU7Td2jEoFaImtv0qmWMpxgZcAojYRYRfWxeXRu46v7GY0Ned5fNDq9Dy2\nE4FuakXo8/nmpkwR+vq6meQednULxNnln62IoJv9jODYMQRosYA7y1yu0SSq9JqpTUTY6wz79nkh\noXGXHytFRadw24IOJnq1fWUbI3pZ3p/Jvt5PD5GUnytEHcE/vmsnly+MOdtUQ7Tcgv74U/u5OHFn\nRRIUpnmmwz63WXqsobIL+lpEdzYTqmFxF2oPEfY6wxbt//ndeZRb2TUs5JlFWA7cUXpkB3R1x9H+\n6Uwpn82s5z0DD2V/Hv8gzq7uVm7PzPE+91BTAUZvzXFwp3l/vmg+l1IErZBt5L7z+M+33kX3xWlt\nm6B/WwtPdb2TEXBwlyhulqDbdkz/jh5a7poLj91+QMRdWAsR9jql2E6K5cIW9UnusZtO9nR0Mtg1\n4LyeLesz2OV7hnHAiP2teVOrfXtmjkjmVTuat8m1cQC+8c71ksZu47aM+vq6iUDGaoFdvbM81TXN\nQGsX+9o+ueHjlYopgTT17RPT0L+jh4sTdzieEXdBWAsR9galUhUPu7s7GXho1ohP4qbnNXckeyN8\n3vnZlPG5xX42I/LvAdDfm92HSh4gSpzbM17PnhKCVHsqvz1+7bcvEtMAFUuCboR9bY9yIzziumh6\nxT0EdRm120nWfBZiu19JsrXMiLA3KJvxT1JMjbabG+HzjsgDnp8BxpdmARORnuihYmQtFjfVFfRc\nrMR5BruezTwy4q5SAQ7u7CRUQ5OWig0gwqk04aRe2SROQzipAUm2lhMRdmHTWEs497Vt0kDWQmtv\nX9vcxxXGjtrd4m5XybD+KtOKsp4AwhZ19yepKa23v5AfmYlQp9gtcnO/pEVHaQR/8iahobNGzAG0\nJjR0luBP3tz4TrVe/XEe7IuglThPjzWUSabeYzQ151QnCUIhJGKvU/pCVtVmDfZYQ1VNLlaEjNiq\neJTg1SHQmujxU0bUrw4RO3wsf+S+RnQf/MmbqHiU6LHnzfOZC4UOhIh9bPXPMHuHM8K9VKentr0e\nfXZh8xBhr1O2XKKpgvaII76DJ40Aa03o0jlCP/4HdEsbscPHssKc732FRFvr7IUCiB57fu0LhSCU\nARF2oeYpJepdk4z4hi6dxz8xSvjFl0GBLxpB+3wmcs8j6sWKdvTY8+Ycrg452xa6UKw51E1qNVAJ\n2iwf8wnjsucaURrpT1NuyiLsSqk/B34euK+1PlKOfQoCUPmoVymigyfxT4wSuH2NjtOvmMP6fKhU\nCo0mdPEM0eOnssdZj2hntrNft8+h4Jjz3JnkazUwxdy6F+SoJl84sE36ymwi5YrY/yPwx8Bflml/\nwlYlj1B7BHTkIiiVFdD17i/fhcDnI/ziy3ScfgVfZBHSadKt21n+xEn80zcJXToHCqLHTpm7heHX\n0U1BYk8+Q3TwpOPJO2Kfc7zQ0FnP4UJDZ/NuF3z7h9k7E9e2OhCC/aZEc+ChWcbpoo9ORqfmnPLH\nevDcixFvp949qT05ZnvNVrkIFEdZhF1r/QOl1J5y7KuR2fIRSyGRzXx3e91kbBBb2KLHnid06Tzo\nNLplmyN+q1kyZn/LRpAdC+cMOtDseODO88Ovo1u3QWTRHFtBdPAkoeHX8U/fwn/nFsGfvEnTjXfw\nz0yR7O4jduSnaPvWn6KWFgENyucV7czxgleHnQuReZy9+3DOO7YMCoJXh82+NPinb2E9mHXuTE5s\nv2lq/R86xjhdmaX0ABqnl4zdVGwhkfLMrE5RuGZeWIl47JvIVu6EV8gnt+5Pknq4n+jgSWO5jFzE\nPzFKYv8RVDxmLJdDg4Qufh90Gl80QhoIXTzjCGHs8DFIp40g26TTNN0awT9tZsdGj50iNHSG0PA5\nkr17jcWTiDniHbx6ERIJ0i3bgTS+6DJtr50m/NmXzPivDeP/0XfxLS+Rau/CCs/T/pf/D9bCLKn2\nLmhqItXaYe4oMKIdfPuHBEaGSLW1m4sVmItJKol1f9L5HFQ8SvDaMLFDg8QODxIaPmfOM9RCdPA5\nooMn2eec2wgD+obZlX+uZicuCdVl04RdKfUS8BJAd1cFpxUKFede6hg3wiPFz9Qs5JOPXCTV1pF9\n3uV1++9PoFu2GdFWELx6iejR50BBaPgcLf/4bUf4dFOQ0PDr3ovGcLYWPTR8juDVYdTSAwCSOwZQ\niWgmOgbdFIBEAmthlvjAYcKffYm2107jn5kidOmcEelrw+jW7WZ+pOVHRRbxRRbR/gA0NRE7fNy5\nSOhACAAVX8YXWcS39MDYMYrMXYcm1d2X16tHa0fUdet2dFPIc277Wg8TGjpLt36XoQHTi2GCrpqb\nuFQuEjqbbJ2KptBUtotpo7Bpwq61Pg2cBji477DMNdtKFEo0PnrcFTFnn0+HWtAt28z7jp8i+PYP\nPZ568OqwEVjlIzr4vPN+cCdXh4kdOkqydw8t//QdiEZAayJP/7xJhJqBOe9T8ZgR9Rdfdjx320sP\nDb/unIpu3Y5aeoBuboNohHTnQ0DWW3d759Fj5jj2hcg+t+jgSW8y1k6wjlxERRad4wA03XgHKzyf\nc25DdB8+xkDLR7BbMFyYj+Cz/Iy9E2Z/sK3uLRkbjfHXNWaBbLFkikOsGKHyuCLTfIlGd9WIWnrg\niDqQrUjJEBo6Y3aZEb7Q8Osmksd10dCaVLsRXKe3sdag0441k3tc3brNEXUAfD7PRSd2+BjRwZO0\nvfpVAh9Mo+NRQKOWFtGt2/MnRJUieuyUuTOIGjdct2xbWWGTOU8VWcQXXSIdaiV2aNCxmlJtxuLJ\nrbzZpxT7tgG8yYGjEd7q38/kZBd3xqMwWvuVMkLlKEvxqFLqvwD/BBxSSk0qpX6jHPsV6h9nin46\n7UzVV5FFVCTsfR4j6r5ohFRbBwv//edJbe8yE4UunnESkaHhc6S2d7Hwy/+O2OFjhC6dp+210464\no3XGcjGTjJp/9Hekg82km1sAaBq/avx613FtQsOve6f7+3wmMZsR9dDw61iLc6Tau9DBFuK7D6Nb\ntpFqbSd4dcjbiiAzltDQGccCss/dPp/g5R+Yc7p4huC1YZK9e4jvPkRyxx6C14ZBQ+zQIIn9RzwX\njNwLyHM9n+Ro9y4+vWeaJx5dpv1jAa70RPnGO9c3tIRhNXGicZVtQW1/oinAqtbA6oxyVcX8q3Ls\np9HZcosHu7x1/8QoVnieVFsHllJGDN97yzy/NE/s8HF0U9BYD0vzhIbPkuwdwD99E//0LVAK/51b\nACR79wBZT94/M0Xba6cd4fTFliGZQAdbjA8eCKFbtxN/eBf+exP4p28RGj6bU61ydkW1CuCpntGB\nELHHTqCbAqhEPOupNwVJJmLGW3dF4vaFCK2J730MUkn89yZMpc3kGNb8fVQiTnLHALFDRwm+9xa+\nBx+y/IlPk2QvOhBCxZdpunXV87GGhs5mK4cy7Gs9zL42xUDrCJear/BW234mW030Xk/2TK5vbvvp\nwvoQK2YTaZRkT9G9Ylzeul2qaNk16BlRDFy7RKq1wxGq2OM/Tdtrp7HuT7H0s79qygGvDtP+V78H\nQPToc1krQykn0Rm4fc1JOMYf3mUuIp0Po2IRx7YJv/g5Ux4ZbAa8k4nscXrE2XUewIoSSY+nnlvK\nqRQ60Ey6ZRvp1u0ke/eaqLynH2vhQ/z3x83dyfYurIUP8E/fzCRjmwBtqniGz5rPzXXeoaGz3lmy\nOWWh+zJln10t08w+PMZb/fuJXNvP2O1wXc1UFUpDhF2oLKvMvLRLAIMjF53Kj9Clc1jheWK7Dma2\nPeVUrwBefxrAskjsO2KqaBwBf5nQ0Fn807ec54BsdYkd6brFON/kogLns+p3F7EnnkbFlwleHSYJ\nK0oZ47sPYS3OY31oFgJJt2wjevRZgtcuEbx2CYBk716SvXuc83bfpTifWc5M3H1tj7KvDW6ER+hq\nmebCthbebm2uu+gdtuBdbpkQYRcqy2ozL32+wtUydjMuV0WK570uy0MlYl4BzxzPntxT0GopEJmX\njUzy1Km+ySllDH/2ZTr+9H91Ntet21dE/+HP/KZ3bK6KnbX6z2RbEYzBo/v5sD/iJFfrReAb5S53\nsxFhFyqH3ct85KIj1vZjIG9VjP28PcvTWlrwVKQ41oRr5qlTteIS8NT2LmKHB4uzWipJwVJGTftf\n/C6+5SXSza2ZJOx248mDUxnkXMjcZC6IxfSfsaP3gdYRxpdmubCtxRF4RvAsIl7rIi8Ujwi7UDmU\nMjNL2zIeustKcM+8XBnRnzFT6jNT952KlPA8ye4+dCDoiJhTtZJHwGNPPL1+q6XcaO0qZTTReuzQ\nUfyT1wncGiHV0c3Cr36R0PDrhIZfRyViJAYOE/7MbxVM6Bbdf8ZFPoGf6GjhypRZRLzldlJEvoEQ\nYRcqh9akHu43pYC2Hzz8uonCdx00JYfuOnGPXzxI9OOfInh1iPav/z6QndDkrgbxJDRhdQGvhqgP\nnc2UMu4luXMPaNOeILXtI8T3PEpi3xGwLKLHT5nqH60Jf+a3Ct9l2PvM85nBGp0jydozA63zjHeN\ncaF3PxPTXUy2Rogs+TlodXJ8104uXzATn2pZ4L98fZHb0RWrqAIQUPCHH+3Y5BHVDiLswrrQ/uvF\nb1xEa9u1Iu7gNVfitFjBrpXFK3LPL/f5x386e5FSaqWfnu8iZb/3UI7NpHXRNpN7ZSZH4Gf3MzHd\nwujUHKO3TNfIqZszjL1znf1B72K0tSL2dlI194w12Rr4rYoIe4VpxI6OA61dhV8s0Ha3kB9cMOKG\nddsNtciK82MdF6hCz8FKNdvAR+IWeBjjKVcE/z736N9hejpdmZpz3tNyO1mTYp+r42m2dk8ZEfYy\nkk/E5xMav4IdQe+cuUbsdZG3g+PFM8ZicLFCoPOIVyl2Q81RzjsKZ9LXMHaPGqc3zgYXHnGXR9oC\nfy91jFvz7wHQ3wsqeYDbM3Ms9YGaCnCFKAetTgCnZTBUX+DdbOWeMiLsZSRfW96FRIr8LmB9cHn0\nLmOxMJFUFE2cZzo6gfmVG+br4HjxjFmkAkz72WOnihPoNSyauhL1crOWvZXLOoTeLfAD3OREtoKU\n8aXvcaIHLszuh16yUT09gJnwNXVzxknA1pLAb0VE2IWCOKK+24/ui7OrdxbozL9xAcGxk4b2YhfF\nCvS6kqJbjUIlou4VmFwVR+tdGzZfO2ZH8FvnGV+aZU9HJ7fmTT94dkA/PURSfq5gqmzG3snmYmrN\nttkKiLALK7AFHfCI+p6OTk5sv1m4D3sewSkqIViIWk2KVptVSkTtZLN7zkDs0eMrWiFsBE/SlZv0\nWFmBh1l2dR8AcCwbWGnbAHwj49GXKvBtlo8PE6kV/jpsKOXQUIiwl5GFhGYh6TVeUrAys1PDrIzS\np9nT0clg15NYifOrv3m1+mo3ItAbZ5Vyx9jhQWKHBp07JhUJO/MASongc8kVeNuyGV/6HgAnMuvo\n2LaNSh7g/RnTNsGO7MuxELc7KSrNwryIsJcRzcoPNJ15PjeJU8t/hH17u4nsAF93nIGONINdA46o\nF4zWS6yvFoqk2BLRTP95a2mhYE+ZUn8fuX8L+1yOi23bALz1YJaBh2D8gy4g7qzVOpqKeqpsSong\npaeMFxH2MqIUpHKicx+Agi8daq/GkNZFbqJ0l3+WHmsMK2EWp/D8I+cRBkl4bg5FlYgq5bQp8CZZ\nBzflImv/rdwIj3Bi+03Pa9o/h0p2squ7ldt9c45dU4rAb8WSxtUQYS8j7X5V94tV50brA61dKyKz\nQgtT60BoRRmjROoVoogS0bZv/Rn+OzeMyNtN0jRmqcESrJj1kF/g9wKzZjj+OafKJkKANz74YMMN\nyhpxzshGEWEXPIym5jzROuRMRiq0MLV9i5+LiPrmkGeWa7J3gKbxEfMaoJYemMW5jz6XXelpk34/\n3uBgxPnpxHZ468Fe9nSkGe9upW+mk6mpuQ31j5+KpfLms3LzXlsBEXYhb1njno7OvNF6MW0ChOqQ\nbyEQHQgBoJYWUfFoxhbDaYlcaiJ1I7j/puxI/q0HewFzp9hHJy0WcGd5XfvVGvx5/vy2YnuBrZlZ\nqBB2Aif3q1YTOJdH7/KNd647ot5yaGxdZY1uRNRrBJcNpgPNRAefMy2A0ahUiuTD/ehAyGm+puJR\n7zqtm4z9N3Zi+00GHppd8Xq9rdlaK0jEXkbqycfLX9bY56mAKcgG2sYKm0/siafNwtkZjz0N+O9N\nYIUXQKmaucva1/Zopp2Bl8ef2s+VC2NcliX91o0I+xakkPVyYvtNyFcB40bKGusDV8vg7O/pDC0/\n/DbpTMVMrfyuboRNj3iTVM1yJdM6WFg/IuxbCFvQ+/Z207mjmSXueUWdVQTdRvq41Af5WgZrSIda\nQPm8qzNV6XfmjtLvpY4x/kEX6ZkAU1NzzkzV9UTqCvL2ZdqKf5Ei7FsA26e0o/T3d9xjd3cnzzyU\nBtYh6hmkj0t94PyewIneo0efI3q8yGZsFcQW9VTTswzPjnNrfg6VqcA6aHUSWmfiFKAvZMkkpQwi\n7A2O23bp6+tmCSPqdqJqvaLuIH1c6oMilhCslqibSphxxj/oYmLGRz8mWm+5ndxQHXs95bgqjQh7\ng+K2XSKpKLovjq/b1KcPdKTpsYacBTPWLepC3VELd1m5UTqYNgO3Z8zs07nbMzwebIOgdIAslbII\nu1LqBeCPAAv4M631l8uxX2H95NoukR2gibuidNt6yVOjLjQ2VbrLcnvpbutlYroLNbWEIrDhKF3I\nT8nCrpSygD8BfgaYBC4qpb6ltX6v1H0L60OidKHWWOmlX0YlDzAx40NNuQT9iAh6OSlHxH4CuK61\nvgGglPqvwGcBEfZNIlfQ7eQotEqULlSFlbaLN0pvve0DJEqvFOUQ9j5gwvV4EniqDPsV1mBt26WE\n5KggbIDVBb0XBWK7bAKbljxVSr0EvATQ3dWzWYdtWPJVu4jtIlQLt4/urna5PTMHdIntssmUQ9in\ngF2ux/2Z5zxorU8DpwEO7ju8BdvylIe1fHSxXYTNZKWgY2rSkwecahcj6CGpdtlEyiHsF4GDSqm9\nGEH/l8C/LsN+BRfFV7tIhC5sDt569Kygm8ToEo9YPUzdnhHbpQqULOxa66RS6reB72HKHf9ca/1u\nySMTHHKj9L6+TrFdhKqxlqDb5Yuh4DK/dORANYe6ZSmLx661/g7wnXLsS8hiR+nRnc300exE6b7u\neHWrXXKXxSvD+plCfZAr6u5Zo24fXWyX6iIzT2uc6M5mAGe5umpH6c6yeIMnwedzLYsXJPaxZzZt\nHMLmkre3i8tHl1mjtYUIexkp15qL7kgdsqKu/dddnRirkBzNLIsXunQe/8Qo4RdfdhZsSLW2g4bY\nkyLuNUUZ7q4K9XYRH712EWEvI4VWS1rPYtarifpTXWP5l6vbLJQiOngS/8QogdvX6Dj9Crp1O6nW\ndqzwPMlETGyZGmK1RceLWQ5vrd4u4qPXLluvn2UNc3n0Lo8/tb9gpF5VUbfx+Qi/+DLpUAu+aARr\n9i5WeJ7Yo8eldW8t4Vp0PDR01rNAimc5vDWWxXNbL2+M+Ji4vOStSZcovSaRiL3GuDhxBzCiPsk9\ndtPJno5OBrsGnNWNqoq9CHLrdohGAFCRReO5i6jXDnkWHVeRMMnuvuzvapUI3o7WvQ27ZJJRvSDC\nXiNcHr3ridQnc/qm1wSuqM946hoVWcQXjdD26lcJv/iySagKtUFG3O0FNdBprPA8oeHXPUsaxg4f\ny2uhvfVgryPqCz+JszPiq+kovVw5rkZAhL3GGE3N0Ucnu7s7OdHXz73YbHELTG8GSqEDQeOpL84R\ne+wE0cGTtL36Vfwzk45gSOReBfIlScGz6LidDwmOXHTEPt+C1vYapJcmAkxOdvFUtIdQarnmo/Ry\n5LgaBRH2MtJm+Upamit0Z5mDOzsZnTLi/haTDDxkbocHu56tCXGPfewZ/BPXSW3rdEoew599ibbX\nTmPdnxRRrwJ5S1AvnsE/fRPrwYcrFh1XkUV0y7YVi23Ygn5hdj8T0/tRUwGeyixTV6tRupAfEfYy\nUsrt3pMHd3B59C7Hd+2ECRxxH6eLgYdmGZ4d58T2Mg52o2hNqmeXScrZt/SXzmEtzRPbdTAbOUp1\nzOZQqAT12jA6lSLV2Z1dDi9T0eSPhJ3fTWjoLO8d3glKuUTd+OkbXXt0M3HbL/MJzULCLGdtKdgR\ntKo5tKoiwl5mSvX5rlwY4/hT+1eIu/ZfB/YC2aZLVamQKTEpJ5SZtUpQe80MUTvpbYXniR591ong\nee9NAuHP5m+0AAAc30lEQVQ+3nzklxmfPcZEppTRLeq1HK277ZeFZApbylNbvM2gZLrKjP2HlvtV\njM9n/wNduTBmbBmrk5a7MHF5iYnpLi5NTPHXtzt468FexpdmuREe8XxtGi5xBzxJuYJldcL6yf3s\nCn2Wq5WgHj9lLrZKmQutqyw1eux5Zg8c5EPrAOOzDzn16fUi6jZ3YymmoilSGuKZr1Tm+a2KROwV\n5m7M/MFp4JVrC87zhSJ4+x/p8uhd55+rJZakz+phNBVgqS/OxDTs7v5n3FtRMWPEveKRfEa8nYdF\nJuWE4lnX5KJiSlC1zrug9b0nPs57i/vgA+inhxaLuhJ1MNG5pSCd+T+zSerCCdVGR4S9wth/dCm8\nSdS1InjPP9XoXbizzOOEGLudJLLbz8TUErf7fJkl8GDgoVmnMVNFBd4VkReVlEunvSWQuY/XONaW\nbDbmmlwEFC5NdFW+uEtQfQsf4Iss0vbqVwi/+DlQqvBFIefznLpZv+0BmlynkgLa/YovHWqv2niq\niQh7HeD+J3sSVxtfq4fRqTl0XxwwDcG0/zq35jt4qmuM8aU3AZxmYW42LPr2Lb0rIi+UlLPuT6Bi\n0Wx9ezpN26tfRQebWfq5X1v1MKVOh69r1pnHcEpQw/PEHj0GaU3zhb+jaWqM0PBZ0BC8NlywXt1m\namqOx+tU1AUvIux1yJMHdzhRvGPTTM0B0Nf3GAD/37QR893dnVzwXwdgT0ens4/xpTc33KLAc0uf\nLyl38QzB996CVBLrwYe0ffMrhH/xc7S9+lUCt68R331o9ci92Ii1EbHPbc3JRWcIXh3OXmA1JBMx\nT+4j9OPzhC79A7qlrWGtsTbLx3wiRa6bvnXrYQwi7GXGTpQuJDVaQ5pshn4qZrL25SjDcqIqt00T\nCzN3ewaAVnz07e3OCH4vfX2dvDF9z7Fubvn3cy/VuXGBd/m07qRc8O0fgoLYo8fRTUGabrxDYHyE\nj/zhvwHlIz5wOBvBFxJoO2LV2olYAWKHBhtSnGw8dylaExo+i1p6gErG0f4mUm3ZPIZaekCyd6/z\necSefMbzeUaPnyJ4bTj7eI2WD7dn5njE6gFqu7wxly8c2MYr1xZkYlIOIuxlxk6I2n9sU9EUVo73\nV05ybRqby3kEX+0OMDG1RF9fJ5N0MTENu3q9Ap+PtUTfieAhE2kPEzs8SOzJZ1CJGIGb74ICtCb8\n2Ze8fdybgt5Wvxlxsi8Q3rp4CL79w/q2YgrlDVx3Kf6pG5BO4r8/CUC6pR3f/H2apsbQTUHjoy+H\nV1bJZPYbvPwGTTfe8Ryn7dWvkth3JG9b5VvzZsHpeqXUiYGNiAh7hbGUt6ZWszmZ+ny+PPcy7YDv\nwiP0MJqaQ/MYb0zfo7Wtl49sawG8lk2PNVRcVG9HhjnesG/uA09lRvtf/C4Lv/pFQpfOEbp0nmR3\nH7Ennl4h9ioRJTR8zrytZRsqskho+BzRwefq1opZNW/wxNOZz04TGj6Hb+kBuinA8lMv4J8cxfpw\nGh2P4UvEsztMJ1dOCEunzV1SxvIKv/iyY4EB2c+a7ExTlTxGP4EqfCLlYav1gSkGEfYKk2u7hFPp\nqmTq3WWUNi2xJC2WLfIBIuBYNmD8+XH+WWZy1BhFVds43vBFfHMfoOJR4ns/SvjFl2n/i9/F+vAe\nnX/yedIdXSS7+7CWFvI0pRo0tWuufTrUU1m8+wKkNSq2bOwRvHmD1PYuVGyZ6PFTRI+dInTpPNrn\nQ8VjZnutSTdvw7e8CMrKWFqHsJYemDLHpiDK9td9PhL7Poo1P4P//iTtX/990Jr47kMk9h8Bn88z\n5+Fe6lg1PhmhwoiwbzHyRvLA44QAGLs94/HnbdsG4MIsPNVlBL6guDs17gp8xn9P7joISrHwq1+k\n808+Dz4FyudZgclb+fE8wSv/SPTjzxL68XlUJIxu3U7s0CA62Jz3mLUWwa+IzgEUpLZ3efMGmYuY\nLfhgLgAqlQSlUEsPQIFKJzP7MYnVZP8BkpmmbCoe8ySaVSIOlh+IZo6rnLyGe/EMw/hmfBzCJiPC\nvsXJLW1zxD7jz0ftiH4qgO6L8+FihI9sa+Gprjz2TL4a94tnCP34H/BPjpLsP0C68yHACFbb336N\n8C/8Rv7Kj8GTtL36FXzRCOmQsYhszz00dLa2yyC1RsWXCV51R+dnnNyDtZC1p3QghIpHiT1ylNCl\nc/iiS+h02kThyQS+jLBrQFtNpD/SY2ypS+eJHn2W2BPZc3YuGFqT2taJ5ao6cjpvkhX14VmzzF0t\nI614N4YIe4XITegsJDQa8/9czAzUapJv9uvBnZ1wF0ZTASZb55noOMGu3lmvwOercT/2PP7JUZqm\nxvDfn8x45BC6dA7/nRu0vfoV57jODNb33iI0/Dq+aMTxid1rq1rheaCEMshSJj4V8d7g2z80678e\nHszejSw9INm7x1hMLnum6foVrMgDYoeOms9P+Ux0no6hLT861IIvsojSmnRTkOjjT6MSMfP5TWei\nbXdpZKZHvqXUiglkABzeCeAsdQeQngnwie5+3r47WdxnsIlIK96NIcJeIXLFuh5LsvIJvKmyaeNO\nS5S5+WY+7O/lxMNjjC/NGoHPnbbu8xF+8XO0/e3X8E/fJDgyZITo48/in7qOf+aOpylV8OoQatlM\ndEqHWoyF4JqwowNBkpnqkY20Lyhl4lNR77WrW64NEzs0CIBaeoAvGsH34X1C0zeJHj1J9Pgpczdz\n6XU00PyjvzMWCqAtP+g0KpVERRZBg/YHwe9HJePZzyLY7BmHOZixuVKt7U6Jo739jJ4D1eecT0/w\nY4xjxPztK7Un6sLGEWEX1qSQXTM2EubOuJ+/Geiiv3+WEw+PAXmSqz4f4c/8Ju3/6cvZ6pkTP0Pw\n7WaSux7JO4NVt7SB1rT97ddI9u7JJBaNQIUunjG+e0ub2VchUbfLAe3X0uk8FkmBqfq5+8s3aeri\nGe+Mzsyxoseeh3Q6Y62Y3i3pQCizS2UspcyPaFBao+IxtGWhtEYHQviWF9EoVGYsijSJ7n6n57rT\n3KtQi4eRi56FT6LHnmdm6arLW1/J8V07uXJnrODrQv0gwi5siCcP7vAIfGSpg3PhXVxfnl3pv9sR\npUssHZ8cCs9gHTpDaPgc/mmz1ms2yj3nGYvHc88Q/MmbNN0aIblzD9Fjp5zt/HduehKYJmG70ztV\n/+IZdLDZG8HnTPMPXToPOk306HPZC04megeNf+o6vuUl0s2t6OY2Uts68M9MkXy4n+DV4ezFZfAk\n/qkbNE1cQ6VTpkY9GjaWjE6DzwKfD+3zk9j30exs3dwJYjn2Fxj/3r1dvbCix3oy02Odrd1jfT2U\nJOxKqX8B/B/Ao8AJrfVQOQYl1A8egb+d5O1Hc+yZlo/w2NU7eZuGAR5xX9lW1giy/84tgteGnUZj\nANHB50xpYO6+7Mk+sWX80zedi4Lt6wNEjz6L9WAWMElO/70J5+IQGjpj6ut795qa78zY7O/RwZME\nRy6CTjvROGQbcdn2S9PUGNqy0M1tqOUw/uUwyYf7Sew9gvXOP3o+Qys8x/InXiB47ZKxbcLzKEzk\nnu7sRi0t4osu0XTjXZMszWnFkK9r43pn6D7xeD8Xr0xmaqOqi6fHesLVY716Q6o7So3Y3wH+OfDV\nMoxFqGOc/jUjeOyZT++ZplvP0b1WREkhgTLi3v5Xv+f4x9GjnzLPrxKdRo9novRL52j54bfNNpZF\nYuc+QKEiYdBpY89ElwgNn6X5R9+FZALdso3kzj3ZdrgZD909o1O3bCON8cZDP3b1Yxk8Sdu3/gwy\nlootwioeBeVDJWOez80/fYvYI0dXiLBJoqZItXYQ/tefp+210/hnpgqvK7vW4wxW4vyqdsxmUqji\nZSGhacuouXuCnz25D7b2rNJiKEnYtdYjAKqObvOqxVaY9pzPnvkuMPtwhK7mIANLV53qmYIRZZ7n\nPL3fW9q8k5QK7Ssj7sGrQ06Pcu0P4J+ZdCyRpskxSKfAZ+GLLDo+eSrYTHTweacSJ3b4GKRSK2d0\nfvMrpl0CoFtavXcfTUHPcLQ/gLXwgenAmOOFk0pgLS2Qau3A0pr4w/34Z6ZINwWxFucIXTpH+LMv\nEbp0bsXFcD3sa3vUOzkp9hPsVgI/mpmkZUN73TiFKl7mE9nY3G29VGtyXz0iHvsmUWsljZXEFvhv\nvHOdOx/0eJKr40uzPNfzyaLLEgv1fvcIeoHEqUmyLmafy1Ta+KJLWA/mAG2SlRlv27ZxrMU5k+j1\n+TzedWL/EQDz+l/9HirywLTNDYYA5dg54V/4Ddpe/QqB2+87F5X47kdI7DuCSsRX3LlY9yeJ7XoE\n3RQ0HRoHT2ZmlAZQibgRc8sqawO0wa4Bp+TR1x0nPVO/LQWElawp7EqpM0C+Bs1f1Fq/VuyBlFIv\nAS8BdHf1FD1AoX75pSMHViRXd/XOAkV2lCw2MZhLRtRtTz3y9M85HrsvGjEi7vOR3t6F78GssUkA\nLD/aZ6HiMbNoSOt2j5jGPmY6KPr/6btmYm10mchP/yyg8E/fcurIUWAtPSAdanH63FhLD0gm4t4u\ni+6LU05FzornM9uXm4GHZmtikpK90hiYjqhTMUmYlsKawq61PlWOA2mtTwOnAQ7uO1xPHT+EEnDb\nM1eACaeL4BqtCTJsKDGoFDrYTLJ3r6cqBjTB995CxYyQq+UwxDOet88iHWol2dVL4PZVVCyCbt3u\nrbhJp2m68S6+2DLaskgHm/FPXM9MMBok2bsn0/JAm4lUmXHrlm2kWtvRgeDKHvS5ol3oexmxfXZ3\n1F5t7JXG7J9tuy2J+OobQawYYdM4aHUSAVSyk3upTga4Wdwbi0wMuol97JPeqhatMWG2RfTjnwIF\noYvZEkztb8IXWaRpOYz2B0jseZRk795sxU3GHrEW54jvPoR/ZgoVjRCYuEZ892HndbRGJWLZxaRd\nXnoyHqt6X5tcn71afPn6oillzPjpKYygK4zA92WidPHVN0ZJl0Cl1C8qpSaBnwK+rZT6XnmGJWwV\nyioyuf3JwVvvHWw2Ynv8FLopRHLHbtPGoKuXdEc3WilUOkVi10HCv/CbRI+fInb4mFPdYt2fJLWt\nk/BnfsvMDNXGm9dNQUKXzhG8NoxKxNCBYE7Z5vNm4ZESEp/lxkqc3/Rjfvn6Iq9cW+CVawtMRlNm\nERq8ZYwaWf2oHJRaFfNN4JtlGovQ4EzdnCGS8qOJo/1zwF5ObL/JjfDalsxaFDPd323rxJ58BhQk\ndx0kOvg87V//fdJdvajIIon9jzuWiXt/qYf7CY5cpO1bf4pu3YaOx1DxKIGb75D+8C6xx04U9MZr\naeWnakXtufXpAdt6ybxuYaJ28dRLR0wrYVN48uAO9gfbaLmdZOEncd4eaebSxBRvPdgLlBi5u6b7\nh4bOeqppVDzqjeQ9dfPPOGWN9mu6ZRvKtkzc22cmJ6XaOgjcvoZaWiTd8ZBpm5tOoZbDKxKjHmpE\n1IWtgXjsdUS9tzDNV+f+RjjOrd6Otfu8r0bOdP+im4NlJiCtOivW/V6fj8T+I/jvTzjVLun2hzJN\ny3yFJw/VICZqPw/srfZQgEy0jncSEkjCdKOIsNcRjdLC1J6lOnY7TITAuitl8uJuXZuhqOqZ9ZRT\n2s26MqLui0aIP7yL8C//O+OxF7ogCGuyQ5KlZUWEXagKbnHv7OtZf6VMLu7WtRnyNQfLpehySq1Z\n+sf/TOj6KHcOHCTtb6L99i0CD+4y+YM/Z/TwIQ6Gu0hGJ7l5/4d5j1VosfBcSs03FMNme+yFqmDA\n+MFS0lheRNiFqmGLe/QuvM8c2j9HjzXLuqP21WaoUlzkvtpjWwR96QQT/Z/g8p5PmW360uy+/HfE\nYkHemvk0b33kBfP8vfyHueC/7nnsXjQczGxQK3HeOV6lBd70jNmcOvZwKo1feROlYK6p/SGrLqzE\nekKEXagJ+vFG7euqlNnoDNU1sAV2fGmWe6lj3OrqQCX2w6zi9swc4KM/9OtM3ZmH+0tr7q+v7zHn\n50nuMTFtFgwHMwPUTBYynvdg10DGAzeUU+QrEa0Xk//JV+0STqVF1CuACLtQM9yemdtwGWQxlspa\ngja+NLviuQuz+4EOVLKLiRkf/ZjmXmoqwEHLiPJBq9MsUnGh8CIVjz+1n4sTd5zHj9DDaGqONKZH\nyxszPkfktf86t+bn2NNhRL7HGmJ86U3nvcVYOvk+N/f5l7vDY6PkfxoFEfY6olE7RJpl95rp39HD\nxDTALBuqcS9gqeRG3gC35ufy7KADlTwAkInIDf30MDk1xyNWtsfRQavTWS4QcFYeyl1tCjLtFC6M\neXqdP/7UfpgA7maGmgowMbVEX18nYCL7N6ZtT+eER/QvuK4/uXYOrIz23aSans3cGRgLZvyDLtIz\nAaam5pwLlVD/iLDXERu5Za31EsknD+7g8qhRt5a7lC7uLtyCfmF2Pyp5zCXYXaipfB0NjaVii/jU\nzRnmmKEFCAWXPVvmE/F85G6XV+gJMRYLM3d7xnnukb3ZC8nolD3uXue5vr5O3pi+54g+GOE3ZMsY\nB7sGAFYIOpgLWD892buOdSyNt2Klo0xi1FIyyajaiLA3OPVyixy6s0x0Z7NH3FXSCFaPNcRaCdVc\nm8W2VS7M7mdiej8A/QQcC2Xq5gyQZH+wrcAejYj/0pEDJZ1XPgpdEJ50/Xx59C647ggez1nbyL4I\nPLK3h9GpuUykD5N0OZ9bFq+Y26RnAvTTQ0vmruHKhbGiL1aQM5M06VrpKE9nh0a926xVRNiFvGxm\npG9H7bnifnvmHtAFDx2DJSPuudgCblssYNssHUxMGyFz++GP3wsBy+wPtq1LxDabtcZmT/TizjKP\nEyKaUVWVCji+vc0bM7Z4mujcxhb0qZszq1zgykMt3B1uJUTYhbxsdqRvC5lty9iee3oGxuniln8/\n91LeSPTW/BwqmRX0XJtFkfHC7y1jR+DuY9U77vNw7KxYkpYcF+QRCq9/ELpTnoucPXMUZAm7WkCE\nXagp3NE7NDOamqOPTnzdBxj/ILud8YYfc1bJm5qaQxGg5XYSgP1B27pYdvbbyDjnl2PhFP2+EpEl\n7GoLEfYtTjELCm82bnG3I9BIjr3g9obBtliAYOOL+Gps5XMXsoiwNzhrJa3WWlD4bizl7Zet4ZVr\nCxWvqlkZgTbn3c5dciiitrlIQrR2EWFvcEoV3xTehQ9SFP6HzkepSdiV3nvhbYTystbvThKitYsI\nu5AXpUw0r7V3hRtrnbPzy5WEbWTxLuXiV8nqpXoplRVWIsIu5KXdr/jSoXbHdhHWZqMiW4qATkVT\nZqHQHOzJQsLWRIRd2DC1Pqt1s6lGhKvJ/0+crNgRhXpAhH2LU0oCrBxCJhcHQSg/IuxbnLXEczXh\ndz9/N5ZyppJrTOUMwEJy9bLJjVwc5GIgCKsjwi6sympCaYs3mP4gdmLVrpwB4/WWUhKXT8TnExp/\nnkZTjZzU+51350nm6cFSyTOWcsb6RYRdWBeFOvrllkXatDepkmYh5ovoP0ykiGuYiuUkCPMIXz1Q\njIAmNfjzJEnjOn/TrXIsuSp3P/WLCLuwLtbT0S8fX76+yFQ05WhwGiPUAIF1tnvN3bLaCcNwUjsT\nu9zkE2Q3pQpoe9PKA0hUvbURYRc2jLvxE6xczzIf4VQaVPYPL65NtZ6m+IvDaqzXf19te2e8Re6r\nza82vSrGB9KXRVhBScKulPoD4BeAODAG/I9a6/lyDEyofdzR9WQ0Rd8GFlewRR28XQHDSc0r1xY8\ndg+sPUFqvcnY1bZfSGipERfqklLv174PHNFaPwG8D/z70ock1CMKI4a5X2tZAk3KWDAW0JHx4790\nqN2JfpUyYm5/uaP6lDYRv/2Vxvj+U9EUd3P99w2gMePK/apTK1/YQpQUsWut/9718EfAf1facIR6\npdQkaSEsjGjnfU1lt4GM6GcuEuWwdWoJvyJvVcxa/r2wNSmnx/7rwP9bxv0JNchml8DtCFpMxbxJ\nWjtyt4XO8faV1/OvBAntrdO3qXSy8g8/2lHR/QuNxZrCrpQ6A+TrwPRFrfVrmW2+iClK+Poq+3kJ\neAmgu6vwii5CbVNqBUeb5WMhkVpRwaJU8eJoe/v5VulZUQJZZuygOXestu0kdd9CLbCmsGutT632\nulLq14CfB57XWhe8AdZanwZOAxzcd7jBbpSFYilHbbQ9y9X+I7KTmZbKVuq4E7FQWFxXE+OFZGpd\nlo7UfQu1QqlVMS8Anwc+pbWOlGdIguAVXHfrYNuGcdsubpumL5SN5ovx/FcT49VmvQpCLVOqx/7H\nQBD4vjJT3X6ktf5cyaMStjxuwc1tHTwVdZU/UrlFlPOJvrQxFuqBUqtiDpRrIIJQiFy7RJNtYSCL\nKAvCSmTmqVDz5EbOmxU157NiFhKahWSK9hw/RqJ4oZYQYReEAuSbYNVmyZ2BUPuIsAt1h5QVCsLq\niLALdYeUFQrC6kiIIwiC0GCIsAuCIDQYYsUIQgHEyxfqFRF2QSiAePlCvSKhhyAIQoMhwi4IgtBg\niLALgiA0GCLsgiAIDYYIuyAIQoMhwi4IgtBgiLALgiA0GCLsgiAIDYYIuyAIQoMhwi4IgtBgiLAL\ngiA0GCLsgiAIDYYIuyAIQoMhwi4IgtBgiLALgiA0GCLsgiAIDYYIuyAIQoNRkrArpf5vpdTbSqnL\nSqm/V0rtLNfABEEQhI1RasT+B1rrJ7TWTwL/DfjfyjAmQRAEoQRKEnat9QPXw1ZAlzYcQRAEoVRK\nXsxaKfW7wP8ALADPlTwiQRAEoSTWjNiVUmeUUu/k+fosgNb6i1rrXcDXgd9eZT8vKaWGlFJDCw/m\ny3cGgiAIgoc1I3at9aki9/V14DvA/15gP6eB0wAH9x0Wy0YQBKFClFoVc9D18LPA1dKGIwiCIJRK\nqR77l5VSh4A0MA58rvQhCYIgCKVQkrBrrX+pXAMRBEEQyoPMPBUEQWgwRNgFQRAaDBF2QRCEBkNp\nvfmVh0qpGUyytRF5CPig2oOoMI1+jo1+fiDnWK8MaK2719qoKsLeyCilhrTWx6o9jkrS6OfY6OcH\nco6NjlgxgiAIDYYIuyAIQoMhwl5+Tld7AJtAo59jo58fyDk2NOKxC4IgNBgSsQuCIDQYIuwVQCn1\nB0qpq5llA7+plOqo9pjKiVLqXyil3lVKpZVSDVV1oJR6QSl1TSl1XSn1hWqPp9wopf5cKXVfKfVO\ntcdSCZRSu5RS55RS72X+Rv9NtcdUDUTYK8P3gSNa6yeA94F/X+XxlJt3gH8O/KDaAyknSikL+BPg\n08BjwL9SSj1W3VGVnf8IvFDtQVSQJPBvtdaPAZ8A/qcG/B2uiQh7BdBa/73WOpl5+COgv5rjKTda\n6xGt9bVqj6MCnACua61vaK3jwH/FtKNuGLTWPwA+rPY4KoXWelprfSnz8yIwAvRVd1Sbjwh75fl1\n4LvVHoRQFH3AhOvxJFtQFBoFpdQe4OPAheqOZPMpec3TrYpS6gywI89LX9Rav5bZ5ouYW8Ovb+bY\nykEx5ycItYpSqg34BvA7WusH1R7PZiPCvkHWWjJQKfVrwM8Dz+s6rCldx5KIjcQUsMv1uD/znFBH\nKKWaMKL+da3131R7PNVArJgKoJR6Afg88BmtdaTa4xGK5iJwUCm1VykVAP4l8K0qj0lYB0opBXwN\nGNFa/4dqj6daiLBXhj8GtgHfV0pdVkp9pdoDKidKqV9USk0CPwV8Wyn1vWqPqRxkEt6/DXwPk3T7\na631u9UdVXlRSv0X4J+AQ0qpSaXUb1R7TGXmaeBXgJOZ/73LSqmfrfagNhuZeSoIgtBgSMQuCILQ\nYIiwC4IgNBgi7IIgCA2GCLsgCEKDIcIuCILQYIiwC4IgNBgi7IIgCA2GCLsgCEKD8f8DMgHxYJ5P\n0MMAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fa6d9895090>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_step = tf.train.AdamOptimizer(0.01).minimize(cost)\n",
    "with tf.Session() as sess:\n",
    "    sess.run(tf.global_variables_initializer())\n",
    "    for i in range(25000):\n",
    "        feed_dict = {x_placeholder:X, y_placeholder:Y}\n",
    "        sess.run(train_step,feed_dict=feed_dict)\n",
    "\n",
    "    preds = sess.run(y,feed_dict=feed_dict)\n",
    "    print('单隐层准确率:%f'%accuracy(preds,Y))\n",
    "    plot_decision_regions(X,Y,y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 还可改善的点\n",
    "1. [把数据分成train，validation，test三部分](https://github.com/scottming/DeepLearning101/blob/scott/ch3/code/3w-asgn.ipynb)\n",
    "2. [用subplot把不同迭代次数的图画出来](https://github.com/ruibofeng/DeepLearning101/blob/master/ch3/project/assignment_ch3.ipynb)\n",
    "3. [3D决策面](https://github.com/miandai/DeepLearning101/blob/master/ch3/project/ch3_3_neuralnet.ipynb)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
